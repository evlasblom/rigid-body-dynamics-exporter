%EDITPARAMETERS creates parameter symbols and structures.
%   [symModel, par] = EDITPARAMETERS(Model) copies the model structure 
%   generated by CreateModel and replaces the parameters by symbolic
%   variables. Then, a parameter structure is created with field that have
%   the same name as the symbolic parameters and the same value as the
%   numeric parameters. This structure can then be used to easily modify
%   the parameters within an exported function. 
%   Note that zero valued parameters are removed to speed up the symbolic
%   calculations and therefore they are not editable later.
%
%   d:      joint.offset
%   r:      inertial.origin
%   m:      inertial.mass
%   i:      inertial.i
%
%   Made by Erik Vlasblom
%   Last modified: 02-10-2014
function [symModel, parameters] = EditParameters(Model)

parameters = struct;
symModel = Model;

for ii = 1:Model.dof
    % d
    in = Model.rigidbody(ii).joint.offset;
    [in_sym,parameters] = symbolize(in,'d',ii,parameters);
    symModel.rigidbody(ii).joint.offset = sym('tmp');
    symModel.rigidbody(ii).joint.offset = in_sym;
    
    % r
    in = Model.rigidbody(ii).inertial.origin;
    [in_sym,parameters] = symbolize(in,'r',ii,parameters);
    symModel.rigidbody(ii).inertial.origin = sym('tmp');
    symModel.rigidbody(ii).inertial.origin = in_sym;
    
    % m
    in = Model.rigidbody(ii).inertial.mass;
    [in_sym,parameters] = symbolize(in,'m',ii,parameters);
    symModel.rigidbody(ii).inertial.mass = sym('tmp');
    symModel.rigidbody(ii).inertial.mass = in_sym;
    
    % i
    in = Model.rigidbody(ii).inertial.i;
    [in_sym,parameters] = symbolize(in,'i',ii,parameters);
    symModel.rigidbody(ii).inertial.i = sym('tmp');
    symModel.rigidbody(ii).inertial.i = in_sym;
end

% make symbols and parameter structure entries
    function [par_sym,par] = symbolize(par_val,name,iii,par)
        xyz = 'xyz';
        par_sym = sym('tmp',size(par_val));
        for jj = 1:max(size(par_val))
            val = par_val(jj);
            if val == 0
                ret = 0;
            else
                if max(size(par_val)) == 1; ret = sym([name,num2str(iii)]);
                else ret = sym([name,num2str(iii),'_',xyz(jj)]);
                end
                par.(char(ret)) = val;
            end
            par_sym = subs(par_sym,char(par_sym(jj)),ret);
        end
    end

end